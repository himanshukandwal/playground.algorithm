package dev.research.himanshu.algorithm.dynamicprogramming;

import java.util.ArrayList;
import java.util.List;

public class MaxValueContiguousSubsequence {
	
	private int[] inputSequence;
	
	public MaxValueContiguousSubsequence() {}

	public MaxValueContiguousSubsequence(int[] inputSequence) {
		this.inputSequence = inputSequence;
	}
	
	public int[] getInputSequence() {
		return inputSequence;
	}
	
	public int[] getMaxSequenceSubsequence() {
		if (getInputSequence() == null || getInputSequence().length == 0) {
			System.out.println(" No data present in input sequence !");
			return null;
		}
		
		List<Integer> maxSubsequence = new ArrayList<Integer>();
		int sum=0;
		
		for (int index = 0; index < getInputSequence().length; index ++) {
			int currentValue = getInputSequence() [index];
			sum += currentValue;
			
			if (sum < currentValue) {
				sum = 0;
				maxSubsequence.clear();
			}
			maxSubsequence.add(currentValue);
		}
		
		return maxSubsequence.toArray(new int[1]);
	}
	
}
