package dev.research.himanshu.algorithm.dynamicprogramming;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MaxFrequencyInArray {
	
	private int[] inputSequence;
	
	public MaxFrequencyInArray() {}

	public MaxFrequencyInArray(int[] inputSequence) {
		this.inputSequence = inputSequence;
	}
	
	public void setInputSequence(int[] inputSequence) {
		this.inputSequence = inputSequence;
	}
	
	public int[] getInputSequence() {
		return inputSequence;
	}
	
	public Integer getMaxFrequency() {
		if (getInputSequence() == null || getInputSequence().length == 0) {
			System.out.println(" No data present in input sequence !");
			return null;
		}
		
		int maxCount, runningCount, topNumber;
		int[][] maxFreqArr = new int[10][10];
		topNumber = getInputSequence()[0];
		maxCount = -1;
		
		for (int index = 1; index < getInputSequence().length; index ++) {
			int currentNumber = getInputSequence() [index];
			
			if (currentNumber == topNumber) {
				runningCount ++;
			}
			
			if (maxCount < runningCount) {
				maxCount = runningCount;
				topNumber = currentNumber;
			} 
		}
		
		System.out.println(" Max count : " + maxCount + " , topNumber : " + topNumber);
		return maxCount;
	}
	
}
