package dev.research.himanshu.algorithm;

import junit.framework.TestCase;

public class MinimumPatchesTest extends TestCase {

	public void testDemoPatch1() throws Exception {
		assertEquals(1, MinimumPatches.minPatches(new int[] { 1, 3 }, 6));
	}

	public void testDemoPatch2() throws Exception {
		assertEquals(1, MinimumPatches.minPatches(new int[] { 1, 5, 10 }, 20));
	}

	public void testDemoPatch3() throws Exception {
		assertEquals(28, MinimumPatches.minPatches(new int[] { 1, 2, 31, 33 }, 2147483647));
	}

	public void testDemoPatch4() throws Exception {
		assertEquals(1,
				MinimumPatches
						.minPatches(
								new int[] { 2, 3, 3, 4, 6, 8, 8, 10, 10, 10, 12, 13, 13, 14, 15, 15, 16, 17, 19, 20, 20,
										21, 21, 21, 23, 23, 24, 25, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32,
										32, 36, 36, 38, 41, 41, 41, 43, 44, 46, 46, 46, 48, 48, 49, 50, 51, 51, 52, 52,
										53, 54, 55, 56, 56, 58, 58, 58, 59, 60, 60, 60, 61, 63, 63, 66, 66, 70, 70, 73,
										74, 74, 75, 78, 80, 81, 83, 85, 87, 87, 89, 89, 89, 90, 90, 92, 92, 96, 98 },
								60844));

	}

	public void testDemoPatch5() throws Exception {
		assertEquals(0, MinimumPatches.minPatches(new int[] { 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3,
				3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
				8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 12, 12, 12, 12, 12, 13, 13, 13,
				13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18,
				18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,
				22, 22, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 26, 26, 26, 26,
				26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 30, 31,
				31, 31, 31, 31, 31, 32, 32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35,
				35, 36, 36, 37, 37, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 41,
				41, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 46, 46,
				46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49,
				49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52,
				53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 57,
				57, 57, 57, 58, 58, 58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
				62, 62, 62, 62, 62, 63, 63, 63, 63, 64, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 67, 67,
				67, 67, 68, 68, 68, 68, 69, 69, 69, 69, 69, 69, 69, 70, 71, 71, 71, 71, 71, 71, 71, 71, 72, 72, 72, 72,
				72, 72, 72, 72, 73, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75,
				76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 80,
				80, 80, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
				84, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 89, 89, 89,
				89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
				93, 93, 93, 93, 93, 93, 93, 94, 94, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96, 96, 97, 97, 97, 97, 97,
				97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100 },
				91863));
	}
	
	public void testDemoPatch6() throws Exception {
		assertEquals(0, MinimumPatches.minPatches(new int[] { 1, 2, 2 }, 5));
	}
}
